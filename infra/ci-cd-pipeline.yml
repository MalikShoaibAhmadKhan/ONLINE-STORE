name: Online Store CI/CD Pipeline

# Trigger on push to main branch or pull requests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Build and test frontend
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check linting
      run: npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Build
      run: npm run build
      
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: frontend-build
        path: ./frontend/dist
  
  # Build and test backend
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check linting
      run: npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v2
      with:
        name: backend-build
        path: ./backend
  
  # Build and push Docker images
  docker:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Download frontend build artifacts
      uses: actions/download-artifact@v2
      with:
        name: frontend-build
        path: ./frontend/dist
    
    - name: Download backend build artifacts
      uses: actions/download-artifact@v2
      with:
        name: backend-build
        path: ./backend
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Build and push frontend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        push: true
        tags: yourusername/online-store-frontend:latest
    
    - name: Build and push backend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: yourusername/online-store-backend:latest
  
  # Deploy to production
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to production server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USERNAME }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /opt/online-store
          docker-compose pull
          docker-compose up -d 