name: Pull Request Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm install

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    - name: Lint Backend
      working-directory: ./backend
      run: npm run lint || true

    - name: Lint Frontend
      working-directory: ./frontend
      run: npm run lint || true

  type-check:
    name: Type Checking
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm install

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    - name: Type Check Backend
      working-directory: ./backend
      run: npm run type-check || true

    - name: Type Check Frontend
      working-directory: ./frontend
      run: npm run type-check || true

  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm install -g cypress
        cd backend && npm install
        cd ../frontend && npm install

    - name: Run E2E Tests
      run: npm run test:e2e || true
      env:
        CYPRESS_BASE_URL: http://localhost:3000
        DB_HOST: localhost
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: test 