name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm install

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test || true

    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test || true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Run SNYK Security Scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run Container Scan
      uses: azure/container-scan@v0
      with:
        image-name: online-store-backend
        severity-threshold: HIGH

  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/online-store-backend:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/online-store-backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/online-store-backend:buildcache,mode=max

    - name: Build and Push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/online-store-frontend:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/online-store-frontend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/online-store-frontend:buildcache,mode=max

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: unnecessary
        if_key_exists: replace

    - name: Deploy to Server
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      run: |
        echo "Deploying to $DEPLOY_HOST..."
        scp docker-compose.yml $DEPLOY_USER@$DEPLOY_HOST:/opt/online-store/
        ssh $DEPLOY_USER@$DEPLOY_HOST 'cd /opt/online-store && docker-compose pull && docker-compose up -d' 